{"name":"mavis","tagline":"Very lightweight zero dependency C++11 unit test framework.","body":"# mavis\r\n\r\nLightweight, header only C++14 unit test framework inspired by [jasmine](http://jasmine.github.io).\r\n\r\n100% Macro free!\r\n\r\n## Usage\r\n\r\nJust put the ``mavis.hpp`` somewhere into your project and use it like this:\r\n\r\n    #include \"path/to/mavis.hpp\"\r\n\r\n    // whereever you want to write your tests\r\n\r\n    mavis::describe(\"A suite\", [](auto &suite) {\r\n        int a = 0;\r\n\r\n        suite.it(\"contains spec with an expectation\", [&a](auto &spec) {\r\n            spec.expect_equals(a, 0);\r\n        });\r\n\r\n        suite.it(\"contains specs with multiple expectations\", [&a](auto &spec) {\r\n            spec.expect_equals(a + 2, 2);\r\n            spec.expect_equals(a * 2, 0);\r\n        });\r\n    });\r\n\r\nPlease note that ``expect_equals`` also works with custom types if you override:\r\n\r\n* operator==(...)\r\n* operator<<(std::ostream&, custom_type&)\r\n\r\nFor more informations please [read the documentation](https://github.com/kasoki/mavis/wiki)\r\n\r\n## License\r\n\r\nMIT\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}